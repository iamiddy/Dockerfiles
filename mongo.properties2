db.name.createIndex( { "propertyId": 1 } ) save as JS
mongo db -u userWriter -p <password> --authenticationDatabase dbanme < <script-file-path>/index_script_file.js

##sh
#!/bin/bash

#Shell script to setup ei-metadata mongo db users.

###Author: Trident System team

#Environment
environment=preprod

#Initialize the admin Users for MongoDB
ei_admin_users=("eiRootAdmin" "eiUserAdmin")

#Initialize the Read Only Users for MongoDB
ei_read_users=("eiMetadataReadUser" "eiMetadataReconReadUser")

#Initialize the Read Write Users for MongoDB
ei_rw_users=("eiMetadataWriteUser" "eiMetadataReconWriteUser")

#####Password Section for Users in Mongodb ###############
##########################################################

#Initialize the Passwords for admin Users in PREPROD
ei_admin_pwd=("eiPreprodRootAdminPass10" "eiPreprodUsrAdminMetadataPass10")

#Initialize the Passwords for Read Only Users in MongoDB in PREPROD
ei_read_pwd=("eiPreprodReadUsrMetadataPass10" "eiPreprodReconReadUsrMetadataPass10")

#Initialize the Passwords for Read Write Users in MongoDB in PREPROD
ei_rw_pwd=("eiPreprodWriteUsrMetadataPass10" "eiPreprodReconWriteUsrMetadataPass10")


#Check if Mongo DB node is Primary
`mongo --eval 'db.isMaster().ismaster' | grep true 2>/dev/null`
result=$?

#Run this script only on MongoDB node
if [ $result -eq 0 ]; then
   
    echo "================Creating Admin users in MongoDB========================================================"

     mongo admin --eval 'db.createUser({ user: "'${ei_admin_users[0]}'",  pwd: "'${ei_admin_pwd[0]}'",  roles: [ { role: "root", db: "admin" } , { role: "userAdminAnyDatabase", db: "admin" } ] } );' 2>/dev/null 
	 
     mongo branded_card --eval 'db.createUser( { user: "'${ei_admin_users[1]}'", pwd: "'${ei_admin_pwd[1]}'", roles: [ { role: "userAdmin", db: "branded_card" } ] } );' 2>/dev/null
	 
     mongo branded_card_transactions --eval 'db.createUser( { user: "'${ei_admin_users[1]}'", pwd: "'${ei_admin_pwd[1]}'", roles: [ { role: "userAdmin", db: "branded_card_transactions" } ] } );' 2>/dev/null


    echo "================Creating Read Only users in Mongo DB========================================================"
    
    mongo branded_card --eval 'db.createUser( { user: "'${ei_read_users[0]}'", pwd: "'${ei_read_pwd[0]}'", roles: [{ role: "read", db: "branded_card" }] } );' 2>/dev/null
	
	 mongo branded_card_transactions --eval 'db.createUser( { user: "'${ei_read_users[1]}'", pwd: "'${ei_read_pwd[1]}'", roles: [{ role: "read", db: "branded_card_transactions" }] } );' 2>/dev/null
  
	echo "==================== Completed Read Only users creation in Mongo DB !!!========================================"

	echo "==================================Creating Read Write users in Mongo DB======================================= "

    mongo branded_card --eval 'db.createUser( { user: "'${ei_rw_users[0]}'", pwd: "'${ei_rw_pwd[0]}'", roles: [{ role: "readWrite", db: "branded_card" }] } );' 2>/dev/null
	
	mongo branded_card_transactions --eval 'db.createUser( { user: "'${ei_rw_users[1]}'", pwd: "'${ei_rw_pwd[1]}'", roles: [{ role: "readWrite", db: "branded_card_transactions" }] } );' 2>/dev/null

	echo "================Completed Read Write users creation in Mongo DB=================================================="
else
    echo "This script need to run on Mongo Primary node"
    exit 1      
fi

